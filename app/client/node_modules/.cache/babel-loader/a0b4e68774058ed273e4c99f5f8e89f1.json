{"ast":null,"code":"var _jsxFileName = \"/Users/stutivishwabhan/Desktop/validation-form/app/src/components/ValidationForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextInput from './TextInput';\nimport RadioInput from './RadioInput';\nimport CountrySelectInput from './CountrySelectInput';\nimport StateSelectInput from './StateSelectInput';\nimport DateInput from './DateInput';\nimport SubmitButton from './SubmitButton';\nimport { checkIsFieldValid } from '../helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFormValues = {\n  firstName: '',\n  lastName: '',\n  emailAddress: '',\n  streetAddress: '',\n  city: '',\n  state: '',\n  country: '',\n  zip: '',\n  phoneNumber: '',\n  dateOfBirth: new Date(),\n  gender: 'male'\n};\nconst genderOptions = [{\n  value: 'male',\n  label: 'Male'\n}, {\n  value: 'female',\n  label: 'Female'\n}, {\n  value: 'other',\n  label: 'Other'\n}];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    textAlign: '-webkit-center'\n  },\n  multipleItems: {\n    display: 'inline-flex',\n    justifyContent: 'center'\n  },\n  padLeft: {\n    marginLeft: '10px'\n  },\n  padRight: {\n    marginRight: '10px'\n  },\n  longTextField: {\n    width: '400px'\n  }\n}));\n\nconst ValidationForm = () => {\n  _s();\n\n  const [values, setValues] = useState(initialFormValues);\n  const [errors, setErrors] = useState({});\n  const classes = useStyles();\n\n  const areFieldsValid = () => {\n    // const numericRegex = /^(0|[1-9][0-9]*)$/; \n    let validationState = {};\n    validationState.firstName = checkIsFieldValid('firstName', values.firstName);\n    validationState.lastName = checkIsFieldValid('lastName', values.lastName); // validationState.emailAddress = values.emailAddress.length !== 0 ? ((emailRegex).test(values.emailAddress) ? \"\" : \"Email is invalid\") : \"This field is required\"; \n\n    validationState.emailAddress = checkIsFieldValid('emailAddress', values.emailAddress);\n    validationState.streetAddress = checkIsFieldValid('streetAddress', values.streetAddress);\n    validationState.city = checkIsFieldValid('city', values.city);\n    validationState.state = checkIsFieldValid('state', values.state);\n    validationState.country = checkIsFieldValid('country', values.country); // validationState.zip = values.zip ? (usZipRegex.test(values.zip) ? \"\" : \"Zip code is invalid\") : \"This field is required\"; \n    // validationState.phoneNumber = values.phoneNumber.length !== 0 ? (values.phoneNumber.length >= 10 ? (usPhoneNumberRegex.test(values.phoneNumber) ? \"\" : \"Phone number is invalid\" ) : \"Phone number must be at least 10 digits\") : \"This field is required\";\n\n    validationState.zip = checkIsFieldValid('zip', values.zip);\n    validationState.phoneNumber = checkIsFieldValid('phoneNumber', values.phoneNumber);\n    validationState.dateOfBirth = checkIsFieldValid('dateOfBirth', values.dateOfBirth);\n    setErrors({ ...validationState\n    });\n    console.log(validationState);\n    return Object.values(validationState).every(i => i === \"\");\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (areFieldsValid()) {\n      alert('all fields valid');\n    }\n  };\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    onSubmit: handleSubmit,\n    autoComplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Welcome!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.multipleItems,\n        children: [/*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"First Name\",\n          name: \"firstName\",\n          value: values.firstName,\n          style: classes.padRight,\n          onChange: handleInputChange,\n          error: errors.firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"Last Name\",\n          name: \"lastName\",\n          value: values.lastName,\n          onChange: handleInputChange,\n          error: errors.lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"Email Address\",\n          name: \"emailAddress\",\n          value: values.emailAddress,\n          onChange: handleInputChange,\n          style: classes.longTextField,\n          error: errors.emailAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"Street Address\",\n          name: \"streetAddress\",\n          value: values.streetAddress,\n          onChange: handleInputChange,\n          style: classes.longTextField,\n          error: errors.streetAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.multipleItems,\n        children: [/*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"City\",\n          name: \"city\",\n          value: values.city,\n          style: classes.padRight,\n          onChange: handleInputChange,\n          error: errors.city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StateSelectInput, {\n          name: \"state\",\n          value: values.state,\n          onChange: handleInputChange,\n          error: errors.state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.multipleItems,\n        children: [/*#__PURE__*/_jsxDEV(CountrySelectInput, {\n          name: \"country\",\n          value: values.country,\n          onChange: handleInputChange,\n          error: errors.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"Zip/Postal\",\n          name: \"zip\",\n          value: values.zip,\n          style: classes.padLeft,\n          onChange: handleInputChange,\n          error: errors.zip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"Phone Number\",\n          name: \"phoneNumber\",\n          value: values.phoneNumber,\n          onChange: handleInputChange,\n          error: errors.phoneNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(DateInput, {\n          label: \"Date of Birth\",\n          name: \"dateOfBirth\",\n          value: values.dateOfBirth,\n          onChange: handleInputChange,\n          error: errors.dateOfBirth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(RadioInput, {\n          label: \"Gender\",\n          name: \"gender\",\n          value: values.gender,\n          onChange: handleInputChange,\n          options: genderOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(SubmitButton, {\n          variant: \"outlined\",\n          size: \"medium\",\n          color: \"primary\",\n          text: \"Get my free samples\",\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ValidationForm, \"Fg9kyboIqLHCraoV6nixO6UfL7c=\", false, function () {\n  return [useStyles];\n});\n\n_c = ValidationForm;\nexport default ValidationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValidationForm\");","map":{"version":3,"sources":["/Users/stutivishwabhan/Desktop/validation-form/app/src/components/ValidationForm.js"],"names":["useState","Grid","makeStyles","TextInput","RadioInput","CountrySelectInput","StateSelectInput","DateInput","SubmitButton","checkIsFieldValid","initialFormValues","firstName","lastName","emailAddress","streetAddress","city","state","country","zip","phoneNumber","dateOfBirth","Date","gender","genderOptions","value","label","useStyles","theme","root","flexGrow","textAlign","multipleItems","display","justifyContent","padLeft","marginLeft","padRight","marginRight","longTextField","width","ValidationForm","values","setValues","errors","setErrors","classes","areFieldsValid","validationState","console","log","Object","every","i","handleSubmit","e","preventDefault","alert","handleInputChange","name","target"],"mappings":"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","sourcesContent":["import { useState } from 'react'; \nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextInput from './TextInput';\nimport RadioInput from './RadioInput';\nimport CountrySelectInput from './CountrySelectInput';\nimport StateSelectInput from './StateSelectInput';\nimport DateInput from './DateInput';\nimport SubmitButton from './SubmitButton';\nimport { checkIsFieldValid } from '../helpers';\n\nconst initialFormValues = {\n    firstName: '', \n    lastName: '', \n    emailAddress: '', \n    streetAddress: '', \n    city: '', \n    state: '',\n    country: '', \n    zip: '', \n    phoneNumber: '', \n    dateOfBirth: new Date(), \n    gender: 'male'\n}\n\nconst genderOptions = [\n    {value: 'male', label: 'Male'}, \n    {value: 'female', label: 'Female'}, \n    {value: 'other', label: 'Other'}\n]\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      textAlign: '-webkit-center',\n    },\n    multipleItems: {\n        display: 'inline-flex',\n        justifyContent: 'center', \n    },\n    padLeft: {\n        marginLeft: '10px',\n    }, \n    padRight: {\n        marginRight: '10px',\n    }, \n    longTextField: {\n        width: '400px',\n    }\n  }));\n\n\nconst ValidationForm = () => {\n    const [values, setValues] = useState(initialFormValues); \n    const [errors, setErrors] = useState({}); \n    const classes = useStyles(); \n\n    const areFieldsValid = () => {\n        \n        // const numericRegex = /^(0|[1-9][0-9]*)$/; \n        let validationState = {}; \n        validationState.firstName = checkIsFieldValid('firstName', values.firstName); \n        validationState.lastName = checkIsFieldValid('lastName', values.lastName); \n        // validationState.emailAddress = values.emailAddress.length !== 0 ? ((emailRegex).test(values.emailAddress) ? \"\" : \"Email is invalid\") : \"This field is required\"; \n        validationState.emailAddress = checkIsFieldValid('emailAddress', values.emailAddress); \n        validationState.streetAddress = checkIsFieldValid('streetAddress', values.streetAddress); \n        validationState.city = checkIsFieldValid('city', values.city); \n        validationState.state = checkIsFieldValid('state', values.state); \n        validationState.country = checkIsFieldValid('country', values.country); \n        // validationState.zip = values.zip ? (usZipRegex.test(values.zip) ? \"\" : \"Zip code is invalid\") : \"This field is required\"; \n        // validationState.phoneNumber = values.phoneNumber.length !== 0 ? (values.phoneNumber.length >= 10 ? (usPhoneNumberRegex.test(values.phoneNumber) ? \"\" : \"Phone number is invalid\" ) : \"Phone number must be at least 10 digits\") : \"This field is required\";\n        validationState.zip = checkIsFieldValid('zip', values.zip); \n        validationState.phoneNumber = checkIsFieldValid('phoneNumber', values.phoneNumber); \n        validationState.dateOfBirth = checkIsFieldValid('dateOfBirth', values.dateOfBirth); \n        setErrors({...validationState}); \n        console.log(validationState); \n        return Object.values(validationState).every(i => i === \"\");\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault(); \n        if (areFieldsValid()) {\n            alert('all fields valid');\n        }\n    }\n\n    const handleInputChange = (e) => {\n        const {name, value} = e.target; \n        setValues({\n            ...values,\n            [name]: value\n        });\n    }\n\n    return (\n    <form className={classes.root} onSubmit={handleSubmit} autoComplete=\"off\">\n    <Grid container spacing={2}>\n        <Grid item xs={12}> <h3>Welcome!</h3> </Grid>\n        <Grid item xs={12} className={classes.multipleItems}>\n            <TextInput \n                label=\"First Name\" \n                name=\"firstName\"\n                value={values.firstName}\n                style={classes.padRight} \n                onChange={handleInputChange}\n                error={errors.firstName}\n            />\n            <TextInput \n                label=\"Last Name\" \n                name=\"lastName\"\n                value={values.lastName}\n                onChange={handleInputChange}\n                error={errors.lastName}\n            />\n        </Grid>\n        <Grid item xs={12}>\n            <TextInput \n                label=\"Email Address\"\n                name=\"emailAddress\"\n                value={values.emailAddress}\n                onChange={handleInputChange}\n                style={classes.longTextField}\n                error={errors.emailAddress}\n            />\n        </Grid>\n        <Grid item xs={12}>\n            <TextInput \n                label=\"Street Address\"\n                name=\"streetAddress\"\n                value={values.streetAddress}\n                onChange={handleInputChange}\n                style={classes.longTextField}\n                error={errors.streetAddress}\n            />\n        </Grid>\n        <Grid item xs={12} className={classes.multipleItems}>\n            <TextInput \n                label=\"City\" \n                name=\"city\"\n                value={values.city}\n                style={classes.padRight}\n                onChange={handleInputChange}\n                error={errors.city}\n            />\n            <StateSelectInput \n                name=\"state\"\n                value={values.state}\n                onChange={handleInputChange}\n                error={errors.state}\n            />\n        </Grid>\n        <Grid item xs={12} className={classes.multipleItems}>\n            <CountrySelectInput \n                name=\"country\"\n                value={values.country}\n                onChange={handleInputChange}\n                error={errors.country}\n            />\n            <TextInput \n                label=\"Zip/Postal\" \n                name=\"zip\"\n                value={values.zip}\n                style={classes.padLeft}\n                onChange={handleInputChange}\n                error={errors.zip}\n            />\n        </Grid>\n        <Grid item xs={12}>\n            <TextInput \n                label=\"Phone Number\"\n                name=\"phoneNumber\"\n                value={values.phoneNumber}\n                onChange={handleInputChange}\n                error={errors.phoneNumber}\n            />\n        </Grid>\n        <Grid item xs={12}>\n            <DateInput \n                label=\"Date of Birth\"\n                name=\"dateOfBirth\"\n                value={values.dateOfBirth}\n                onChange={handleInputChange}\n                error={errors.dateOfBirth}\n            />\n        </Grid>\n        <Grid item xs={12}>\n            <RadioInput \n                label=\"Gender\"\n                name=\"gender\"\n                value={values.gender}\n                onChange={handleInputChange}\n                options={genderOptions}\n            />\n        </Grid>\n        <Grid item xs={12}>\n            <SubmitButton \n                variant=\"outlined\"\n                size=\"medium\"\n                color=\"primary\"\n                text=\"Get my free samples\"\n                type=\"submit\"\n            />\n        </Grid>\n    </Grid>\n    </form>\n)\n}\n\nexport default ValidationForm; "]},"metadata":{},"sourceType":"module"}