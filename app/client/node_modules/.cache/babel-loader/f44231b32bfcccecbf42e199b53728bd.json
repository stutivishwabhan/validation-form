{"ast":null,"code":"var _jsxFileName = \"/Users/stutivishwabhan/Desktop/validation-form/app/src/components/ValidationForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Button, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextInput from './TextInput';\nimport RadioInput from './RadioInput';\nimport SelectInput from './SelectInput';\nimport { countryOptions, countryToFlag, countryUseStyles } from './Countries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFormValues = {\n  firstName: '',\n  lastName: '',\n  emailAddress: '',\n  streetAddress: '',\n  city: '',\n  state: '',\n  country: 'United States',\n  zip: '',\n  phoneNumber: '',\n  dateOfBirth: '',\n  gender: 'male'\n};\nconst genderOptions = [{\n  value: 'male',\n  label: 'Male'\n}, {\n  value: 'female',\n  label: 'Female'\n}, {\n  value: 'other',\n  label: 'Other'\n}];\nconst stateOptions = [{\n  code: 'CA',\n  label: 'California'\n}, {\n  code: 'MA',\n  label: 'Massachusetts'\n}, {\n  code: 'NY',\n  label: 'New York'\n}];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    textAlign: '-webkit-center'\n  },\n  multipleItems: {\n    display: 'inline-flex',\n    justifyContent: 'center'\n  },\n  padLeft: {\n    marginLeft: '10px'\n  },\n  padRight: {\n    marginRight: '10px'\n  }\n}));\n\nconst handleSubmit = () => {};\n\nconst ValidationForm = () => {\n  _s();\n\n  const [values, setValues] = useState(initialFormValues);\n  const classes = useStyles();\n  const countryClasses = countryUseStyles();\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    onSubmit: handleSubmit,\n    autoComplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Welcome!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.multipleItems,\n        children: [/*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"First Name\",\n          name: \"firstName\",\n          value: values.firstName,\n          style: classes.padRight,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"Last Name\",\n          name: \"lastName\",\n          value: values.lastName,\n          style: classes.padLeft,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"Email Address\",\n          name: \"emailAddress\",\n          value: values.emailAddress,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"Street Address\",\n          name: \"streetAddress\",\n          value: values.streetAddress,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.multipleItems,\n        children: [/*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"City\",\n          name: \"city\",\n          value: values.city,\n          style: classes.padRight,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SelectInput, {\n          options: stateOptions,\n          getOptionLabel: option => option.label,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Choose a state/province\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this),\n          style: {\n            width: 300\n          },\n          classes: classes.padLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.multipleItems,\n        children: [/*#__PURE__*/_jsxDEV(SelectInput, {\n          options: countryOptions,\n          getOptionLabel: option => option.label,\n          renderOption: option => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: countryToFlag(option.code)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 25\n            }, this), option.label, \" (\", option.code, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this),\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Choose a country/region\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }, this),\n          style: {\n            width: 300\n          },\n          classes: (classes.padRight, countryClasses.option)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"Zip/Postal\",\n          name: \"zip\",\n          value: values.zip,\n          style: classes.padLeft,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"Phone Number\",\n          name: \"phoneNumber\",\n          value: values.phoneNumber,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"Date of Birth\",\n          name: \"dateOfBirth\",\n          value: values.dateOfBirth,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(RadioInput, {\n          name: \"gender\",\n          value: values.gender,\n          onChange: handleInputChange,\n          options: genderOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          children: \"Get my free samples\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ValidationForm, \"ymFEvhdh3nWRfLk5Aki+N86LQWk=\", false, function () {\n  return [useStyles];\n});\n\n_c = ValidationForm;\nexport default ValidationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValidationForm\");","map":{"version":3,"sources":["/Users/stutivishwabhan/Desktop/validation-form/app/src/components/ValidationForm.js"],"names":["React","useState","useEffect","Grid","Button","TextField","makeStyles","TextInput","RadioInput","SelectInput","countryOptions","countryToFlag","countryUseStyles","initialFormValues","firstName","lastName","emailAddress","streetAddress","city","state","country","zip","phoneNumber","dateOfBirth","gender","genderOptions","value","label","stateOptions","code","useStyles","theme","root","flexGrow","textAlign","multipleItems","display","justifyContent","padLeft","marginLeft","padRight","marginRight","handleSubmit","ValidationForm","values","setValues","classes","countryClasses","handleInputChange","e","name","target","option","params","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'; \nimport { Grid, Button, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextInput from './TextInput';\nimport RadioInput from './RadioInput';\nimport SelectInput from './SelectInput';\nimport { countryOptions, countryToFlag, countryUseStyles } from './Countries';\n\nconst initialFormValues = {\n    firstName: '', \n    lastName: '', \n    emailAddress: '', \n    streetAddress: '', \n    city: '', \n    state: '',\n    country: 'United States', \n    zip: '', \n    phoneNumber: '', \n    dateOfBirth: '', \n    gender: 'male'\n}\n\nconst genderOptions = [\n    {value: 'male', label: 'Male'}, \n    {value: 'female', label: 'Female'}, \n    {value: 'other', label: 'Other'}\n]\n\nconst stateOptions = [\n    { code: 'CA', label: 'California' },\n    { code: 'MA', label: 'Massachusetts' },\n    { code: 'NY', label: 'New York' }\n]\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      textAlign: '-webkit-center',\n    },\n    multipleItems: {\n        display: 'inline-flex',\n        justifyContent: 'center', \n    },\n    padLeft: {\n        marginLeft: '10px',\n    }, \n    padRight: {\n        marginRight: '10px',\n    }\n  }));\n\nconst handleSubmit = () => {\n\n}\n\nconst ValidationForm = () => {\n    const [values, setValues] = useState(initialFormValues); \n    const classes = useStyles(); \n    const countryClasses = countryUseStyles(); \n\n    const handleInputChange = (e) => {\n        const {name, value} = e.target; \n        setValues({\n            ...values,\n            [name]: value\n        });\n    }\n\n    return (\n    <form className={classes.root} onSubmit={handleSubmit} autoComplete=\"off\">\n    <Grid container spacing={2}>\n        <Grid item xs={12}> <h3>Welcome!</h3> </Grid>\n        <Grid item xs={12} className={classes.multipleItems}>\n            <TextInput \n                label=\"First Name\" \n                name=\"firstName\"\n                value={values.firstName}\n                style={classes.padRight} \n                onChange={handleInputChange}\n            />\n            <TextInput \n                label=\"Last Name\" \n                name=\"lastName\"\n                value={values.lastName}\n                style={classes.padLeft}\n                onChange={handleInputChange}\n            />\n        </Grid>\n        <Grid item xs={12}>\n            <TextInput \n                label=\"Email Address\"\n                name=\"emailAddress\"\n                value={values.emailAddress}\n                onChange={handleInputChange}\n            />\n        </Grid>\n        <Grid item xs={12}>\n            <TextInput \n                label=\"Street Address\"\n                name=\"streetAddress\"\n                value={values.streetAddress}\n                onChange={handleInputChange}\n            />\n        </Grid>\n        <Grid item xs={12} className={classes.multipleItems}>\n            <TextInput \n                label=\"City\" \n                name=\"city\"\n                value={values.city}\n                style={classes.padRight}\n                onChange={handleInputChange}\n            />\n            <SelectInput\n                options={stateOptions}\n                getOptionLabel={(option) => option.label}\n                renderInput={(params) => \n                    <TextField\n                        {...params}\n                        label=\"Choose a state/province\"\n                        variant=\"outlined\"\n                    />\n                }\n                style={{ width: 300 }}\n                classes={classes.padLeft}\n            />\n        </Grid>\n        <Grid item xs={12} className={classes.multipleItems}>\n            <SelectInput\n                options={countryOptions}\n                getOptionLabel={(option) => option.label}\n                renderOption={(option) => \n                    <React.Fragment>\n                        <span>{countryToFlag(option.code)}</span>\n                        {option.label} ({option.code})\n                    </React.Fragment>\n                }\n                renderInput={(params) => \n                    <TextField\n                        {...params}\n                        label=\"Choose a country/region\"\n                        variant=\"outlined\"\n                    />\n                }\n                style={{ width: 300 }}\n                classes={classes.padRight, countryClasses.option}\n            />\n            <TextInput \n                label=\"Zip/Postal\" \n                name=\"zip\"\n                value={values.zip}\n                style={classes.padLeft}\n                onChange={handleInputChange}\n            />\n        </Grid>\n        <Grid item xs={12}>\n            <TextInput \n                label=\"Phone Number\"\n                name=\"phoneNumber\"\n                value={values.phoneNumber}\n                onChange={handleInputChange}\n            />\n        </Grid>\n        <Grid item xs={12}>\n            <TextInput \n                label=\"Date of Birth\"\n                name=\"dateOfBirth\"\n                value={values.dateOfBirth}\n                onChange={handleInputChange}\n            />\n        </Grid>\n        <Grid item xs={12}>\n            <RadioInput \n                name=\"gender\"\n                value={values.gender}\n                onChange={handleInputChange}\n                options={genderOptions}\n            />\n        </Grid>\n        <Grid item xs={12}>\n            <Button \n                variant=\"outlined\"\n            >\n                Get my free samples\n            </Button>\n        </Grid>\n    </Grid>\n    </form>\n)\n}\n\nexport default ValidationForm; "]},"metadata":{},"sourceType":"module"}