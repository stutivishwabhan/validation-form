{"ast":null,"code":"var _jsxFileName = \"/Users/stutivishwabhan/Desktop/validation-form/app/src/components/ValidationForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextInput from './TextInput';\nimport RadioInput from './RadioInput';\nimport CountrySelectInput from './CountrySelectInput';\nimport StateSelectInput from './StateSelectInput';\nimport DateInput from './DateInput';\nimport SubmitButton from './SubmitButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFormValues = {\n  firstName: '',\n  lastName: '',\n  emailAddress: '',\n  streetAddress: '',\n  city: '',\n  state: '',\n  country: '',\n  zip: '',\n  phoneNumber: '',\n  dateOfBirth: new Date(),\n  gender: 'male'\n};\nconst genderOptions = [{\n  value: 'male',\n  label: 'Male'\n}, {\n  value: 'female',\n  label: 'Female'\n}, {\n  value: 'other',\n  label: 'Other'\n}];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    textAlign: '-webkit-center'\n  },\n  multipleItems: {\n    display: 'inline-flex',\n    justifyContent: 'center'\n  },\n  padLeft: {\n    marginLeft: '10px'\n  },\n  padRight: {\n    marginRight: '10px'\n  },\n  longTextField: {\n    width: '400px'\n  }\n}));\n\nconst ValidationForm = () => {\n  _s();\n\n  const [values, setValues] = useState(initialFormValues);\n  const [errors, setErrors] = useState({});\n  const classes = useStyles();\n\n  const areFieldsValid = () => {\n    let validationState = {};\n    validationState.firstName = values.firstName ? \"\" : \"This field is required\";\n    validationState.lastName = values.lastName ? \"\" : \"This field is required\";\n    validationState.email = values.emailAddress ? /.+@.+..+/.test(values.emailAddress) ? \"\" : \"Email is invalid\" : \"This field is required\";\n    validationState.street = values.streetAddress ? \"\" : \"This field is required\";\n    validationState.country = values.country ? \"\" : \"This field is required\";\n    validationState.zip = values.zip ? \"\" : \"This field is required\";\n    validationState.phoneNumber = values.phoneNumber ? values.phoneNumber.length > 9 ? \"\" : \"Phone number must be at least 9 digits\" : \"This field is required\";\n    const dateRegex = /^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/;\n    validationState.date = values.date ? dateRegex.test(values.date) ? \"\" : \"Date is invalid\" : \"This field is required\";\n    setErrors({ ...validationState\n    });\n    return Object.values(validationState).every(i => i === \"\");\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (areFieldsValid()) {\n      alert('valid');\n    }\n  };\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    onSubmit: handleSubmit,\n    autoComplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Welcome!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.multipleItems,\n        children: [/*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"First Name\",\n          name: \"firstName\",\n          value: values.firstName,\n          style: classes.padRight,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"Last Name\",\n          name: \"lastName\",\n          value: values.lastName,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"Email Address\",\n          name: \"emailAddress\",\n          value: values.emailAddress,\n          onChange: handleInputChange,\n          style: classes.longTextField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"Street Address\",\n          name: \"streetAddress\",\n          value: values.streetAddress,\n          onChange: handleInputChange,\n          style: classes.longTextField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.multipleItems,\n        children: [/*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"City\",\n          name: \"city\",\n          value: values.city,\n          style: classes.padRight,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StateSelectInput, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.multipleItems,\n        children: [/*#__PURE__*/_jsxDEV(CountrySelectInput, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"Zip/Postal\",\n          name: \"zip\",\n          value: values.zip,\n          style: classes.padLeft,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"Phone Number\",\n          name: \"phoneNumber\",\n          value: values.phoneNumber,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(DateInput, {\n          label: \"Date of Birth\",\n          name: \"dateOfBirth\",\n          value: values.dateOfBirth,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(RadioInput, {\n          name: \"gender\",\n          value: values.gender,\n          onChange: handleInputChange,\n          options: genderOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(SubmitButton, {\n          variant: \"outlined\",\n          size: \"medium\",\n          color: \"primary\",\n          text: \"Get my free samples\",\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ValidationForm, \"Fg9kyboIqLHCraoV6nixO6UfL7c=\", false, function () {\n  return [useStyles];\n});\n\n_c = ValidationForm;\nexport default ValidationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValidationForm\");","map":{"version":3,"sources":["/Users/stutivishwabhan/Desktop/validation-form/app/src/components/ValidationForm.js"],"names":["React","useState","useEffect","Grid","makeStyles","TextInput","RadioInput","CountrySelectInput","StateSelectInput","DateInput","SubmitButton","initialFormValues","firstName","lastName","emailAddress","streetAddress","city","state","country","zip","phoneNumber","dateOfBirth","Date","gender","genderOptions","value","label","useStyles","theme","root","flexGrow","textAlign","multipleItems","display","justifyContent","padLeft","marginLeft","padRight","marginRight","longTextField","width","ValidationForm","values","setValues","errors","setErrors","classes","areFieldsValid","validationState","email","test","street","length","dateRegex","date","Object","every","i","handleSubmit","e","preventDefault","alert","handleInputChange","name","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'; \nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextInput from './TextInput';\nimport RadioInput from './RadioInput';\nimport CountrySelectInput from './CountrySelectInput';\nimport StateSelectInput from './StateSelectInput';\nimport DateInput from './DateInput';\nimport SubmitButton from './SubmitButton';\n\nconst initialFormValues = {\n    firstName: '', \n    lastName: '', \n    emailAddress: '', \n    streetAddress: '', \n    city: '', \n    state: '',\n    country: '', \n    zip: '', \n    phoneNumber: '', \n    dateOfBirth: new Date(), \n    gender: 'male'\n}\n\nconst genderOptions = [\n    {value: 'male', label: 'Male'}, \n    {value: 'female', label: 'Female'}, \n    {value: 'other', label: 'Other'}\n]\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      textAlign: '-webkit-center',\n    },\n    multipleItems: {\n        display: 'inline-flex',\n        justifyContent: 'center', \n    },\n    padLeft: {\n        marginLeft: '10px',\n    }, \n    padRight: {\n        marginRight: '10px',\n    }, \n    longTextField: {\n        width: '400px',\n    }\n  }));\n\n\nconst ValidationForm = () => {\n    const [values, setValues] = useState(initialFormValues); \n    const [errors, setErrors] = useState({}); \n    const classes = useStyles(); \n\n    const areFieldsValid = () => {\n        let validationState = {}; \n        validationState.firstName = values.firstName ? \"\" : \"This field is required\"; \n        validationState.lastName = values.lastName ? \"\" : \"This field is required\"; \n        validationState.email = values.emailAddress ? ((/.+@.+..+/).test(values.emailAddress) ? \"\" : \"Email is invalid\") : \"This field is required\"; \n        validationState.street = values.streetAddress ? \"\" : \"This field is required\"; \n        validationState.country = values.country ? \"\" : \"This field is required\"; \n        validationState.zip = values.zip ? \"\" : \"This field is required\"; \n        validationState.phoneNumber = values.phoneNumber ? (values.phoneNumber.length > 9 ? \"\" : \"Phone number must be at least 9 digits\") : \"This field is required\";\n        const dateRegex = /^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/; \n        validationState.date = values.date ? (dateRegex.test(values.date) ? \"\" : \"Date is invalid\") : \"This field is required\"; \n        setErrors({...validationState}); \n        return Object.values(validationState).every(i => i === \"\");\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault(); \n        if (areFieldsValid()) {\n            alert('valid');\n        }\n    }\n\n    const handleInputChange = (e) => {\n        const {name, value} = e.target; \n        setValues({\n            ...values,\n            [name]: value\n        });\n    }\n\n    return (\n    <form className={classes.root} onSubmit={handleSubmit} autoComplete=\"off\">\n    <Grid container spacing={2}>\n        <Grid item xs={12}> <h3>Welcome!</h3> </Grid>\n        <Grid item xs={12} className={classes.multipleItems}>\n            <TextInput \n                label=\"First Name\" \n                name=\"firstName\"\n                value={values.firstName}\n                style={classes.padRight} \n                onChange={handleInputChange}\n            />\n            <TextInput \n                label=\"Last Name\" \n                name=\"lastName\"\n                value={values.lastName}\n                onChange={handleInputChange}\n            />\n        </Grid>\n        <Grid item xs={12}>\n            <TextInput \n                label=\"Email Address\"\n                name=\"emailAddress\"\n                value={values.emailAddress}\n                onChange={handleInputChange}\n                style={classes.longTextField}\n            />\n        </Grid>\n        <Grid item xs={12}>\n            <TextInput \n                label=\"Street Address\"\n                name=\"streetAddress\"\n                value={values.streetAddress}\n                onChange={handleInputChange}\n                style={classes.longTextField}\n            />\n        </Grid>\n        <Grid item xs={12} className={classes.multipleItems}>\n            <TextInput \n                label=\"City\" \n                name=\"city\"\n                value={values.city}\n                style={classes.padRight}\n                onChange={handleInputChange}\n            />\n            <StateSelectInput />\n        </Grid>\n        <Grid item xs={12} className={classes.multipleItems}>\n            <CountrySelectInput />\n            <TextInput \n                label=\"Zip/Postal\" \n                name=\"zip\"\n                value={values.zip}\n                style={classes.padLeft}\n                onChange={handleInputChange}\n            />\n        </Grid>\n        <Grid item xs={12}>\n            <TextInput \n                label=\"Phone Number\"\n                name=\"phoneNumber\"\n                value={values.phoneNumber}\n                onChange={handleInputChange}\n            />\n        </Grid>\n        <Grid item xs={12}>\n            <DateInput \n                label=\"Date of Birth\"\n                name=\"dateOfBirth\"\n                value={values.dateOfBirth}\n                onChange={handleInputChange}\n            />\n        </Grid>\n        <Grid item xs={12}>\n            <RadioInput \n                name=\"gender\"\n                value={values.gender}\n                onChange={handleInputChange}\n                options={genderOptions}\n            />\n        </Grid>\n        <Grid item xs={12}>\n            <SubmitButton \n                variant=\"outlined\"\n                size=\"medium\"\n                color=\"primary\"\n                text=\"Get my free samples\"\n                type=\"submit\"\n            />\n        </Grid>\n    </Grid>\n    </form>\n)\n}\n\nexport default ValidationForm; "]},"metadata":{},"sourceType":"module"}