{"ast":null,"code":"var _jsxFileName = \"/Users/stutivishwabhan/Desktop/validation-form/app/src/components/StateSelectInput.js\";\nimport { TextField } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport React from 'react'; // import SelectInput from './SelectInput'\n\nimport { stateOptions } from './States';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst convertEventParameter = (name, value) => ({\n  target: {\n    name,\n    value\n  }\n});\n\nexport default function StateSelectInput(props) {\n  const {\n    name,\n    value,\n    onChange\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    style: {\n      width: 300\n    },\n    options: stateOptions,\n    autoHighlight: true,\n    getOptionSelected: (option, value) => option.name === value.name,\n    getOptionLabel: option => option.name + ' (' + option.abbreviation + ')' || \"\",\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n      label: \"Choose a state/province\",\n      variant: \"outlined\",\n      inputProps: { ...params.inputProps,\n        autoComplete: 'new-password' // disable autocomplete and autofill\n\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this),\n    onChange: (e, v) => onChange(convertEventParameter(name, v.name))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_c = StateSelectInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"StateSelectInput\");","map":{"version":3,"sources":["/Users/stutivishwabhan/Desktop/validation-form/app/src/components/StateSelectInput.js"],"names":["TextField","Autocomplete","React","stateOptions","convertEventParameter","name","value","target","StateSelectInput","props","onChange","width","option","abbreviation","params","inputProps","autoComplete","e","v"],"mappings":";AAAA,SAASA,SAAT,QAA0B,mBAA1B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,YAAT,QAA6B,UAA7B;;;AAEA,MAAMC,qBAAqB,GAAG,CAACC,IAAD,EAAOC,KAAP,MAAkB;AAC5CC,EAAAA,MAAM,EAAE;AACJF,IAAAA,IADI;AACEC,IAAAA;AADF;AADoC,CAAlB,CAA9B;;AAMA,eAAe,SAASE,gBAAT,CAA0BC,KAA1B,EAAiC;AAC5C,QAAM;AAACJ,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcI,IAAAA;AAAd,MAA0BD,KAAhC;AACA,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAE;AAACE,MAAAA,KAAK,EAAE;AAAR,KADX;AAEI,IAAA,OAAO,EAAER,YAFb;AAGI,IAAA,aAAa,MAHjB;AAII,IAAA,iBAAiB,EAAE,CAACS,MAAD,EAASN,KAAT,KAAmBM,MAAM,CAACP,IAAP,KAAgBC,KAAK,CAACD,IAJhE;AAKI,IAAA,cAAc,EAAGO,MAAD,IAAYA,MAAM,CAACP,IAAP,GAAc,IAAd,GAAqBO,MAAM,CAACC,YAA5B,GAA2C,GAA3C,IAAkD,EALlF;AAMI,IAAA,WAAW,EAAGC,MAAD,iBACT,QAAC,SAAD,OACQA,MADR;AAEI,MAAA,KAAK,EAAC,yBAFV;AAGI,MAAA,OAAO,EAAC,UAHZ;AAII,MAAA,UAAU,EAAE,EACR,GAAGA,MAAM,CAACC,UADF;AAERC,QAAAA,YAAY,EAAE,cAFN,CAEsB;;AAFtB;AAJhB;AAAA;AAAA;AAAA;AAAA,YAPR;AAgBI,IAAA,QAAQ,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUR,QAAQ,CAACN,qBAAqB,CAACC,IAAD,EAAOa,CAAC,CAACb,IAAT,CAAtB;AAhBhC;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;KAtBuBG,gB","sourcesContent":["import { TextField } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\nimport React from 'react'\n// import SelectInput from './SelectInput'\nimport { stateOptions } from './States'\n\nconst convertEventParameter = (name, value) => ({\n    target: {\n        name, value\n    }\n})\n\nexport default function StateSelectInput(props) {\n    const {name, value, onChange} = props; \n    return (\n        <Autocomplete\n            style={{width: 300}}\n            options={stateOptions}\n            autoHighlight\n            getOptionSelected={(option, value) => option.name === value.name}\n            getOptionLabel={(option) => option.name + ' (' + option.abbreviation + ')' || \"\"}\n            renderInput={(params) => \n                <TextField\n                    {...params}\n                    label=\"Choose a state/province\"\n                    variant=\"outlined\"\n                    inputProps={{\n                        ...params.inputProps,\n                        autoComplete: 'new-password', // disable autocomplete and autofill\n                    }}\n                />}\n            onChange={(e, v) => onChange(convertEventParameter(name, v.name))}\n        />\n    )\n}\n"]},"metadata":{},"sourceType":"module"}